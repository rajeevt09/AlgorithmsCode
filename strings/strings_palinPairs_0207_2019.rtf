{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11400\viewh9000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
public:\
    \
    bool isPalin(string str)\
    \{\
        int n = str.length();\
        for(int i=0;i<n/2;i++)\
        \{\
            if(str[i] != str[n-i-1]) return false;\
        \}\
        return true;\
    \}\
    \
    bool checkPalin(string s1,string s2)\
    \{\
        int s1len = s1.length();\
        int s2len = s2.length();\
        int minlen = std::min(s1len,s2len);\
        string sMaxStr;\
        if(s1len  > s2len)\
        \{\
           sMaxStr = s1;\
        \}\
        else if(s1len < s2len)\
        \{\
            sMaxStr = s2;\
        \}\
        int i=0;\
        while ( i < minlen )\
        \{\
            if(s1[i] != s2[i]) return false;\
            i++;\
        \}\
        if(sMaxStr.length() == 0) return true; // all character matched\
        //reached end of one string and all characters are matched . check rest is palin\
        return isPalin(sMaxStr.substr(i,sMaxStr.length()-i));\
    \}\
    \
    vector<vector<int>> palindromePairs(vector<string>& words) \{\
        vector<pair<string,int>> reversedPairs;\
        vector<vector<int>> solution;\
        int i=0;\
        for(auto &word:words) \{reversedPairs.push_back(make_pair(word,i++));\};\
        for(int i=0;i<words.size();i++)\
        \{\
            string strRev = words[i];\
            std::reverse(strRev.begin(),strRev.end());         \
            reversedPairs.push_back(make_pair(strRev,i));\
        \}\
        std::sort(reversedPairs.begin(),reversedPairs.end(),[]\
                  (pair<string,int> &a,pair<string,int> &b)\{return a.first < b.first;\});\
            \
        //now sequentially process the sorted strings outputting adjacent matches\
        for(int i=0;i<reversedPairs.size() - 1;i++)\
        \{\
            //skip strings that are same source\
            if(reversedPairs[i].second == reversedPairs[i+1].second) continue;\
            //compare strings i and (i+1)\
            \
            if(checkPalin(reversedPairs[i].first,reversedPairs[i+1].first))\
            \{\
                vector<int> pair;\
                pair.push_back(reversedPairs[i].second);\
                pair.push_back(reversedPairs[i+1].second);\
                solution.push_back(pair);    \
            \}    \
        \}\
        return solution;\
    \}\
\};}